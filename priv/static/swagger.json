{
  "swagger": "2.0",
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User signup.",
        "responses": {
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "firstname",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "lastname",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "username",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "email",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "password",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "token",
            "in": "query",
            "description": "Please use your token according to your platform (WEB, IOS, ANDROID)"
          }
        ],
        "operationId": "EvercamMediaWeb.UserController.create",
        "description": ""
      }
    },
    "/snapmails/{id}/unsubscribe/{email}": {
      "patch": {
        "tags": [
          "Snapmails"
        ],
        "summary": "Unsubscribe the snapmail of given email.",
        "responses": {
          "404": {
            "description": "Snapmail not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the snapmail being requested."
          },
          {
            "type": "string",
            "required": true,
            "name": "email",
            "in": "path",
            "description": "Give subscribed email."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapmailController.unsubscribe",
        "description": ""
      }
    },
    "/snapmails/{id}": {
      "patch": {
        "tags": [
          "Snapmails"
        ],
        "summary": "Update the existing snapmail.",
        "responses": {
          "404": {
            "description": "Snapmail not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the snapmail being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "camera_exids",
            "in": "query",
            "description": "Multiple IDs of camera in following format (abc,xyz)."
          },
          {
            "type": "array",
            "required": false,
            "name": "notify_days",
            "items": {
              "type": "string",
              "enum": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday"
              ]
            },
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "notify_time",
            "in": "query",
            "description": "Notification, for example 14:23"
          },
          {
            "type": "string",
            "required": false,
            "name": "recipients",
            "in": "query",
            "description": "Multiple emails in following format (test@example.com,info@example.com)."
          },
          {
            "type": "string",
            "required": false,
            "name": "subject",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "timezone",
            "in": "query",
            "description": "For example Europe/Dublin"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapmailController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "Snapmails"
        ],
        "summary": "Returns the requested snapmail details.",
        "responses": {
          "404": {
            "description": "Snapmail not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the snapmail being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapmailController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "Snapmails"
        ],
        "summary": "Delete the snapmail",
        "responses": {
          "404": {
            "description": "Snapmail not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the snapmail being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapmailController.delete",
        "description": ""
      }
    },
    "/snapmails": {
      "post": {
        "tags": [
          "Snapmails"
        ],
        "summary": "Create new snapmail.",
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "camera_exids",
            "in": "query",
            "description": "Multiple IDs of camera in following format (abc,xyz)."
          },
          {
            "type": "array",
            "required": true,
            "name": "notify_days",
            "items": {
              "type": "string",
              "enum": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday"
              ]
            },
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "notify_time",
            "in": "query",
            "description": "Notification time, for example 14:23"
          },
          {
            "type": "string",
            "required": true,
            "name": "recipients",
            "in": "query",
            "description": "Multiple emails in following format (test@example.com,info@example.com)."
          },
          {
            "type": "string",
            "required": true,
            "name": "subject",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "timezone",
            "in": "query",
            "description": "For example Europe/Dublin"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapmailController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "Snapmails"
        ],
        "summary": "Returns all snapmails.",
        "responses": {
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapmailController.all",
        "description": ""
      }
    },
    "/sdk/nvr/reboot": {
      "post": {
        "tags": [
          "SDK"
        ],
        "summary": "Reboot nvr.",
        "responses": {
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": true,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester"
          },
          {
            "type": "string",
            "required": true,
            "name": "ip",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "port",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "user",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "password",
            "in": "query",
            "description": ""
          }
        ],
        "operationId": "EvercamMediaWeb.SDKController.nvr_reboot",
        "description": ""
      }
    },
    "/cameras/{id}/thumbnail": {
      "get": {
        "tags": [
          "Cameras"
        ],
        "summary": "Returns the latest thumbnail jpeg image.",
        "responses": {
          "404": {
            "description": "Camera didn't respond with a jpeg"
          },
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the camera being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.thumbnail",
        "description": ""
      }
    },
    "/cameras/{id}/shares": {
      "post": {
        "tags": [
          "Shares"
        ],
        "summary": "Provides the camera rights to user.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "email",
            "in": "query",
            "description": "Share with Evercam registered user"
          },
          {
            "type": "string",
            "required": true,
            "name": "rights",
            "in": "query",
            "enum": [
              "snapshot",
              "minimal+share",
              "full"
            ],
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "message",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraShareController.create",
        "description": ""
      },
      "patch": {
        "tags": [
          "Shares"
        ],
        "summary": "Change the camera rights to user.",
        "responses": {
          "404": {
            "description": "Camera does not exist or Share not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "400": {
            "description": "Invalid rights specified in request"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "email",
            "in": "query",
            "description": "Give shared user's email"
          },
          {
            "type": "string",
            "required": true,
            "name": "rights",
            "in": "query",
            "enum": [
              "snapshot",
              "minimal+share",
              "full"
            ],
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraShareController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "Shares"
        ],
        "summary": "Returns the camera permitted users list.",
        "responses": {
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraShareController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "Shares"
        ],
        "summary": "Delete the camera access.",
        "responses": {
          "404": {
            "description": "Camera does not exist or Share not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "email",
            "in": "query",
            "description": "Give shared user's email"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraShareController.delete",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots/{year}/{month}/{day}/{hour}": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns the hourly snapshots.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "year",
            "in": "path",
            "description": "Year, for example 2013"
          },
          {
            "type": "string",
            "required": true,
            "name": "month",
            "in": "path",
            "description": "Month, for example 12"
          },
          {
            "type": "string",
            "required": true,
            "name": "day",
            "in": "path",
            "description": "Day, for example 10"
          },
          {
            "type": "string",
            "required": true,
            "name": "hour",
            "in": "path",
            "description": "Hour, for example 13"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.hour",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots/{year}/{month}/{day}/hours": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns all recorded hours in a day.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "year",
            "in": "path",
            "description": "Year, for example 2013"
          },
          {
            "type": "string",
            "required": true,
            "name": "month",
            "in": "path",
            "description": "Month, for example 12"
          },
          {
            "type": "string",
            "required": true,
            "name": "day",
            "in": "path",
            "description": "Day, for example 16"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.hours",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Check availability of recording.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "year",
            "in": "path",
            "description": "Year, for example 2013"
          },
          {
            "type": "string",
            "required": true,
            "name": "month",
            "in": "path",
            "description": "Month, for example 12"
          },
          {
            "type": "string",
            "required": true,
            "name": "day",
            "in": "path",
            "description": "Day, for example 15"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.day",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots/{timestamp}/nearest": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns the nearest snapshot image in base64 format.",
        "responses": {
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "timestamp",
            "in": "path",
            "description": "Unix timestamp"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.nearest",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots/{timestamp}": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns the jpeg image of given timestamp.",
        "responses": {
          "404": {
            "description": "Snapshot not found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "timestamp",
            "in": "path",
            "description": "Unix timestamp"
          },
          {
            "type": "string",
            "required": true,
            "name": "notes",
            "in": "query",
            "enum": [
              "Evercam Proxy",
              "Evercam Thumbnail",
              "Evercam Timelapse",
              "Evercam SnapMail",
              "Others"
            ],
            "description": "\n            - Evercam Proxy = Recording\n            - Evercam Thumbnail = Thumbnail\n            - Evercam Timelapse = Timelapse\n            - Evercam SnapMail = SnapMail\n            - Others = Archives"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          },
          {
            "type": "boolean",
            "required": true,
            "name": "view",
            "in": "query",
            "description": ""
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.show",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots/oldest": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns the oldest snapshot image in base64 format.",
        "responses": {
          "404": {
            "description": "Camera does not respond with a base64 image "
          },
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.oldest",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots/latest": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns the latest snapshot image in base64 format.",
        "responses": {
          "404": {
            "description": "Camera didn't respond with a base64 image "
          },
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.latest",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns the list of all snapshots currently stored for this camera.",
        "responses": {
          "500": {
            "description": "Internal Server Error"
          },
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "from",
            "in": "query",
            "description": "Unix timestamp"
          },
          {
            "type": "string",
            "required": true,
            "name": "to",
            "in": "query",
            "description": "Unix timestamp"
          },
          {
            "type": "integer",
            "required": true,
            "name": "limit",
            "in": "query",
            "description": "",
            "default": 3600
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "",
            "default": 1
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.index",
        "description": ""
      }
    },
    "/cameras/{id}/logs": {
      "get": {
        "tags": [
          "Cameras"
        ],
        "summary": "Returns the logs.",
        "responses": {
          "404": {
            "description": "Camera didn't found"
          },
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the camera being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.LogController.show",
        "description": ""
      }
    },
    "/cameras/{id}/live/snapshot": {
      "get": {
        "tags": [
          "Cameras"
        ],
        "summary": "Returns the latest jpeg image from live camera.",
        "responses": {
          "504": {
            "description": "Camera does not respond with a jpeg"
          },
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the camera being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.live",
        "description": ""
      }
    },
    "/cameras/{id}/archives/{archive_id}/thumbnail": {
      "get": {
        "tags": [
          "Archives"
        ],
        "summary": "Returns the jpeg thumbnail of given archive.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "archive_id",
            "in": "path",
            "description": "Unique identifier for archive."
          },
          {
            "type": "string",
            "required": true,
            "name": "type",
            "in": "query",
            "enum": [
              "clip",
              "compare",
              "others"
            ],
            "description": "Media type of archive."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ArchiveController.thumbnail",
        "description": ""
      }
    },
    "/cameras/{id}/archives/{archive_id}": {
      "get": {
        "tags": [
          "Archives"
        ],
        "summary": "Returns the archives Details.",
        "responses": {
          "404": {
            "description": "Camera does not exist or Archive does not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "archive_id",
            "in": "path",
            "description": "Unique identifier for archive."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ArchiveController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "Archives"
        ],
        "summary": "Delete the archives for given camera.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "archive_id",
            "in": "path",
            "description": "Unique identifier for archive."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ArchiveController.delete",
        "description": ""
      }
    },
    "/cameras/{id}/archives": {
      "post": {
        "tags": [
          "Archives"
        ],
        "summary": "Create new archive.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "title",
            "in": "query",
            "description": "Name of the clip."
          },
          {
            "type": "string",
            "required": true,
            "name": "from_date",
            "in": "query",
            "description": "Unix timestamp"
          },
          {
            "type": "string",
            "required": true,
            "name": "to_date",
            "in": "query",
            "description": "Unix timestamp"
          },
          {
            "type": "boolean",
            "required": false,
            "name": "is_nvr_archive",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ArchiveController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "Archives"
        ],
        "summary": "Returns the archives list of given camera.",
        "responses": {
          "403": {
            "description": "Camera does not exist"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ArchiveController.index",
        "description": ""
      }
    },
    "/cameras/{id}": {
      "get": {
        "tags": [
          "Cameras"
        ],
        "summary": "Returns the camera details.",
        "responses": {
          "404": {
            "description": "Camera not found"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the camera being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraController.show",
        "description": ""
      }
    },
    "/cameras/archives/pending": {
      "get": {
        "tags": [
          "Archives"
        ],
        "summary": "Returns all pending archives.",
        "responses": {
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ArchiveController.pending_archives",
        "description": ""
      }
    },
    "/cameras": {
      "get": {
        "tags": [
          "Cameras"
        ],
        "summary": "Returns all public and private cameras.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraController.index",
        "description": ""
      }
    }
  },
  "info": {
    "version": "1.0",
    "title": "Evercam Server"
  },
  "host": "media.evercam.io/v1",
  "definitions": {}
}